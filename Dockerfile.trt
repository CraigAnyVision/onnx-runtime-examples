FROM mcr.microsoft.com/azureml/onnxruntime:latest-tensorrt

WORKDIR /home/build/

ARG TZ=Europe/Belfast
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update; \
    apt-get upgrade -y; \
    apt-get install -y \
    build-essential \
    pkg-config \
    cmake \
    gdb \
    gdbserver \
    git \
    valgrind \
    nano \
    vim \
    openssh-server \
    lsb-release \
    wget \
    curl \
    axel \
    zip \
    unzip \
    cpio \
    tree \
    libgtk2.0-dev \
    libopencv-dev \
    libboost-all-dev \
    libgflags-dev \
    libgoogle-glog-dev \
    libssl-dev \
    rsync;

# Enable remote debugging
RUN set -eu; \
    mkdir /var/run/sshd; \
    echo 'root:root' | chpasswd; \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config; \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd; \
    useradd -ms /bin/bash debugger; \
    echo 'debugger:pwd' | chpasswd;

# 22 for ssh server, 7777 for gdb server
EXPOSE 22 7777

ARG CMAKE_VERSION="3.16.0"
RUN set -eu; \
    axel "https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz"; \
    tar xf "cmake-${CMAKE_VERSION}.tar.gz"; \
    cd "cmake-${CMAKE_VERSION}"; \
    cmake .; \
    make -j $(nproc) install;

ARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime
ARG ONNXRUNTIME_BRANCH=master
RUN set -eux; \
	git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime; \
	mkdir -p /code/; \
	cp onnxruntime/docs/Privacy.md /code/Privacy.md; \
    cp onnxruntime/dockerfiles/LICENSE-IMAGE.txt /code/LICENSE-IMAGE.txt; \
    cp onnxruntime/ThirdPartyNotices.txt /code/ThirdPartyNotices.txt;

RUN set -eux; \
    cd onnxruntime/; \
    ./build.sh --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_tensorrt --tensorrt_home /workspace/tensorrt --config Release --build_wheel --update --build --build_shared_lib --cmake_extra_defines ONNXRUNTIME_VERSION=$(cat ./VERSION_NUMBER);

RUN set -eux; \
    cd onnxruntime/build/Linux/Release/; \
    cmake . -DCMAKE_INSTALL_PREFIX=/opt/onnxruntime-trt/; \
    make install -j $(nproc);

# Clear up
RUN rm -rf /home/build/

WORKDIR /ort_examples/
